Change Log
=============

2007/12/04 (setup.py 0.2.0):
 - added the ability to create Python Eggs by running:
   $ python setup.py bdist_egg

2008/02/08 (setup.py 0.2.5, ibm_db-0.2.5, ibm_db_dbi-0.2.5):
 - added support for ibm_db_sa-0.1.0 SQLAlchemy-0.4 adapter release

2008/02/15 (setup.py 0.2.6, ibm_db-0.2.5, ibm_db_dbi-0.2.5):
 - fixed .egg setup loading issue #1 (defect #154259)

2008/03/06 (setup.py 0.2.7, ibm_db-0.2.7, ibm_db_dbi-0.2.7):
 - fixed error handling for execute when connection handle is invalid (defect #151164)

2008/03/28 (setup.py 0.2.8, ibm_db-0.2.8, ibm_db_dbi-0.2.8):
 - fixed BIGINT return handling issue #5 (defect #150638)
 - fixed autocommit default issue #6 (defect #156919)
 - fixed _get_exception() tuple issue #8 (defect #156925)

2008/05/08 (setup.py 0.2.9, ibm_db-0.2.9, ibm_db_dbi-0.2.9):
 - fixed fetch first N rows
only optimize for N rows issue #2 (defect #154260)
 - fixed extra count() query issue #7 (defect #156926)
 - fixed setup.py exit issue if env not set (defect #158296)

2008/07/16 (setup.py 0.2.9.1, ibm_db-0.2.9.1, ibm_db_dbi-0.2.9.1):
 - fixed Compilation fail on DB2 versions < 9 due to SQL_DECFLOAT declaration ( defect #162728)

2008/08/24 (setup.py 0.3.0, ibm_db-0.3.0, ibm_db_dbi-0.3.0):
 - Added trusted context support in driver.

2008/10/08 (setup.py 0.4.0, ibm_db-0.4.0, ibm_db_dbi-0.4.0):
 - fixed memory leak in fetch_assoc issue #13 (defect #165205)
 - fixed reference counting errors in _python_ibm_db_bind_fetch_helper issue #14 (defect #167122)
 - fixed ibm_db_dbi.Connection.tables() returning empty list issue #16 (defect #167059)
 - adjusted error message if IBM DS environment variables not set.

2008/11/05 (setup.py 0.4.1, ibm_db-0.4.1, ibm_db_dbi-0.4.1):
 - Added zOS and iSeries(System i) support.

2009/02/16 (setup.py 0.6.0, ibm_db-0.6.0, ibm_db_dbi-0.6.0):
 - New feature - Unicode support for driver and wrapper (defect #166036)
 - New Feature - DB2 on MacOS support (both Client and Server)
 - fixed Metadata not loading table info (defect #158705)
 - fixed problem of real datatype (defect #168619)
 - Python 2.6 support on driver and wrapper (defect #169629)
 - decfloat support (defect #95795)
 - Code clean up and formatting.
 - Test cases renamed to reflect their functions.

2009/03/16 (setup.py 0.7.0, ibm_db-0.7.0, ibm_db_dbi-0.7.0):
 - Fixed Graphic column returning nil problem (defect #172150)
 - Removed warnings while building driver (defect #163787)
 - Fixed ibm_db.set_option() failing if unicode is passed to dictionary. (defect #172432)
 - Code clean up and formatting.

2009/05/11 (setup.py 0.7.2, ibm_db-0.7.2, ibm_db_dbi-0.7.2):
 - Memory cleanup - Fixed a lot of issues leading to memory leaks.
 - New Feature - Added support for SQLRowCount to return correct results on select queries.
   DB2 supports this from DB2 V95FP3 onwards. See test cases 17,18,19 for samples. (defect #173237)

2009/05/27 (setup.py 0.7.2.1, ibm_db-0.7.2.1, ibm_db_dbi-0.7.2.1):
 - Fixed Backward Compatibility issue with SQLROWCOUNT (defect #185120)

2009/06/25 (setup.py 0.7.2.5, ibm_db-0.7.2.5, ibm_db_dbi-0.7.2.5):
 - Support for inserting BigInt numbers in bigInt type column with prepare statement (defect #184705)

2009/09/03 (setup.py 0.8.0, ibm_db-0.8.0, ibm_db_dbi-0.8.0):
 - Added new API "callproc" to support stored procedure (defect#183022)-  Refer test cases for samples and "http://code.google.com/p/ibm-db/wiki/APIs" for API Usage
 - support OUT variable in stored procedure
 - Changes in Test cases (test_146_CallSPINAndOUTParams.py, test_148_CallSPDiffBindPattern_01.py, test_52949_TestSPIntVarcharXml.py) for calling strored procedure through new API "callproc"
 - Removed warnings while building driver

2009/10/14 (setup.py 1.0, ibm_db-1.0, ibm_db_dbi-1.0):
 - New Feature - added support for UCS-4 build python (defect #174236)
 - Removed memory leak in callproc API (defect #191526)
 - Added support for datetime/time,buffer object type in callproc API (defect #191029)
 - Removed error in executing statement through wrapper when result set contains LOBs/xml data

2010/03/25 (setup.py 1.0.1, ibm_db-1.0.1, ibm_db_dbi-1.0.1):
 - Fixed reading LONGVARCHAR columns (defect #197044)
 - Fixed reading BINARY Data (defect #204272)
 - Fixed reading rows in which CLOB column has NULL value (defect #204273)
 - Fixed connect-segfault(with None value and 4th agrument is not a Dictionary type) (defect #204271)
 - Fixed distinction between INT and BIGINT in Field Type return(defect #204278)
 - New Feature - added new method in ibm_db_dbi wrapper "pconnect"  to establish persistance connection (defect #204278)

2010/04/28 (setup.py 1.0.2, ibm_db-1.0.2, ibm_db_dbi-1.0.2)
 - Fixed issues with Integer argument in AIX (defect #197018)
 - Fixed Performance issues with dbi wrapper (defect #206854)

2010/08/06 (setup.py 1.0.3, ibm_db-1.0.3, ibm_db_dbi-1.0.3)
 - Added Decimal object support in ibm_db Driver (defect #212225)
 - Added test case for Decimal object Support
 - Enhanced Performance by Allowing other threads for concurrent operation during time consuming db calls (defect #208042)

2011/05/17 (setup.py 1.0.4, ibm_db-1.0.4, ibm_db_dbi-1.0.4)
 - Added new API execute_many in ibm_db Driver(defect #225893)
 - Added new test case for ibm_db's execute_many API
 - Modified executemany function of ibm_db_dbi adaptor to use ibm_db's execute_many API(defect #225894)
 - Fixed cursor.description for fetching multiple resultset(defect #225938)
 - Fixed error handling for insertion of clob data in ibm_db Driver(defect #225892)

2011/09/06 (setup.py 1.0.5, ibm_db-1.0.5, ibm_db_dbi-1.0.5)
 - Added new API's createdb, dropdb, recreatedb, createdbNX in ibm_db Driver and ibm_db_dbi wrapper (defect #231289 & #231293)
 - Added new test cases for createdb, dropdb, recreatedb, createdbNX APIs (defect #231289)
 - Fixed execute_many API doesn't gives relevent error message when non homogeneous array value arguments passed(defect #231294)
 - Modified test_execute_many.py test case to test ERROR message also. (defect #231294)

2012/05/24 (setup.py 1.0.6, ibm_db-1.0.6, ibm_db_dbi-1.0.6)
  - Fixed: Python crashed instead of raising Error message when trying to insert non numeric string to Integer Field on executemany of dbi wrapper ( issue #86)
  - Added an option in connect and pconnect API to turned OFF CLI numeric literal feature. (issue #87)
  - Added a messages attribute in cursor object of dbi wrapper to store error and warning messages. Through this we can now return the partial list retrieved by fetch**() function and the error messages also. (issue #91, 95)
  - Fixed: cursor.description gives incorrect value upon consecutive calls for INSERT/DELETE (issue #94)
  - Fixed: Segmentation fault when retrieving value of DBCLOB of very large dimensions (issue#100)
  - Fixed: DeprecationWarning: BaseException.message has been deprecated as of Python 2.6 (issue#101)
  - Fixed: The column type SQL_WLONGVARCHAR is unsupported and will cause a segfault when returned. (issue#102)
  - Made autocommit OFF as default in dbi wrapper(issue #103)
  - Added runtime version check through __version__ attribute to in ibm_db and dbi wrapper(issue #105)
  - Removed duplicate cursor constructor and enhanced the 1st constructor itself with 2nd constructor property (issue #108)
  - Enhanced execute_many API to accept NULL mixed with other values (defect #240445)
  - Fixed: OverflowError on Long Integer in Decimal-Field (defect #240445)
  - Fixed: Stored procedure truncates string-parameter (defect #240445)
  - Added a environment variable IBM_DB_HOME to make the installation process easy (defect #240445)

2012/09/21 (setup.py 2.0.0, ibm_db-2.0.0, ibm_db_dbi-2.0.0)
  - New Feature - Added Python-3.x support for driver and wrapper (defect #243457)
  - Fixed: Resource leak over the lifetime of connection objects in wrapper (issue #120)
  - Enhanced: Strict type checking for connection and statement object.
  - Fixed: Allow trial license to connect ZOS/i5(defect #243556)

2013/02/03 (setup.py 2.0.1, ibm_db-2.0.1, ibm_db_dbi-2.0.1)
  - Fixed: Retrieving NULL CLOB/XML/BLOB values(issue #121, #125)
  - Fixed: free_stmt() not able to free stmt resources(issue #124)

2013/03/04 (setup.py 2.0.2, ibm_db-2.0.2, ibm_db_dbi-2.0.2)
  - Fixed: Memory leak with LONGVARCHAR (defect #248442)
  - Fixed: Handling of CLOB datatype in execute_many function (defect #248442)
  - Enhanced: Keeps weakref of open cursor in connection's _cursor_list (defect #248442)
  - Enhanced: dbi cursor is now compatible to the iteration protocol (defect #248442)

2013/06/17 (setup.py 2.0.3, ibm_db-2.0.3, ibm_db_dbi-2.0.3)
  - Fixed: Performance issue due to datetime, date, time conversion inside dbi wrapper. ibm_db driver now returns datetime, date, time object for TIMESTAMP, DATE, TIME field type correspondingly instead of string object
  - Enhanced: ibm_db driver are now capable to handle datetime, date, time object
  - Fixed: Now quoted literal replacement off by default
  - Enhanced: Added a new method in ibm_db to check indicated column in result set is nullable or not, cursor's description of ibm_db_dbi now keep the nullable column info also
  - Fixed: callproc api now return long type object instead of string for BIGINT field type
  - Added: New test case test_InsertRetrieveDateTimeTypeColumn.py for handling of datetime object in ibm_db driver

2013/09/11 (setup.py 2.0.4, ibm_db-2.0.4, ibm_db_dbi-2.0.4)
  - Fixed: ISO8601 datetime with 'T' delimiter (defect #495080)
  - Fixed: Build error for Python-3.3.x with Visual Studio (defect #495080)

2013/09/25 (setup.py 2.0.4.1, ibm_db-2.0.4.1, ibm_db_dbi-2.0.4.1)
  - Fixed: unicode ISO8601 datetime with 'T' delimiter  (defect #495340)
  - Modified test_6792_FieldTypeRetStrDatetimeTimestamp.py test case to add test for ISO8601 with 'T' delimiter (defect #495340)

2014/02/04 (setup.py 2.0.5, ibm_db-2.0.5, ibm_db_dbi-2.0.5)
 - Enhanced: Performance of query involving LOBs fields (defect #498081)
 - Added: SQL_ATTR_INFO_PROGRAMNAME connection attribute (issue #144)
 - Fixed: Unhashable type issue with 'DBAPITypeObject' (issue #145)
 - Fixed: Tests adjustments for IBM Informix (issue #139)

2015/01/01 (setup.py 2.0.5.1, ibm_db-2.0.5.1, ibm_db_dbi-2.0.5.1)
 - Enhanced installation to pull IBM Data Server Driver automatically if not present

2015/10/28 (setup.py 2.0.6, ibm_db-2.0.6, ibm_db_dbi-2.0.6)
 - Added: Retrieving SQLW messages with Python API, ibm_db.stmt_warn()(defect #1303874)
 - Fixed: Segmentation fault with call statement for a SP when NULL values are passed(issue #151)
 - Fixed: Returning identity value for Iseries (defect #1303874)
 - Fixed: Return relevant error message in case of closed connection (Issue #167)
 - Fixed: Mac support enhancements to setup.py (Issue #184)
 - Fixed: renamed README to README.md and updated setup.py

 2016/03/23 (setup.py 2.0.7, ibm_db-2.0.7, ibm_db_dbi-2.0.7)
 - Retrieve last serial value for IDS using get_last_serial_value() API.
 - SQL_ATTR_QUERY_TIMEOUT keyword support using  ibm_db.set_option:
 - test_warn.py for ibm_db.stmt_warn()
 - ibm_db binaries for python 3.5 on windows

 2016/10/13
 - Added: New attribute USE_WCHAR with values WCHAR_YES(default) and WCHAR_NO
          Setting this attrbiute to WCHAR_NO would result in using char bind-in as against current default wchar.
 - Added: New API set_fix_return_type(1(default)|0) to allow/disallow additional formatting of decimal and blob data.

 2016/11/17
 - Added: Correct OUTPUT TIMESTAMP Parameters behavior in ibm_db.callproc API for stored procedure calls.

 2017/08/09 (ibm-db 2.0.8)
 -Python 3.6.x support for ibm_db.

 2018/08/06 (ibm_db-2.0.9)
 -Python 3.7.0 support for ibm_db
 -Read architecture from os.uname[4] - PR325
 -fix pconnect : closed connection object reused and reported in error - PR316, issue 314
 -add support for ppc64le - PR311
 -add support for DBCLOB in ibm_db_dbi - PR307
 -process unique persistent connections  - PR278
 -Added new contribution guidelines - PR275

 -enable travis CI
 
  2019/03/13 (ibm_db-3.0.1)
 - Reference README.md in MANIFEST.in
 - Fix ibm_db.get_option() to return correct attribute values
 - Fix ibm_db.cursor_type() to return correct values
 - Added test cases for ibm_db.get_option(), ibm_db.set_option(), ibm_db.cursor_type().
 - Added SQL_ATTR_TXN_ISOLATION for get_option() as it's used by ibm_db_sa
 - Add certificates needed to verify downloads from IBM FTP site - PR367
 - Fix unpredictable returning bytes instead string for multiple result sets - PR374
 - Removed unused tests_1 directory - PR376
 - Run install_name_tool post installation on mac_os - PR377
 - Ensure generated tarballs include IBM certificates - PR382
- Copy README, LICENSE and CHANGES to ibm_db install location - PR384

2020/06/16 (ibm_db-3.0.2)
- Support for python 3.8
- Support for Boolean datatype to correctly interpret the values
- Blob support for OUT parameter in stored procedure
- MAC OS : add post build script to run install_name_tool 
- rename tests to ibm_db_tests for seamless installation using conda-forge
- add_dll_directory() for specifying the path of dependent libraries of ibm_db
- Fix segfault in case of NULL returned by getSQLWCharAsPyUnicodeObject - PR479
- travis.yml update 
- execute_many() does not check correctly for errors, throws CLI0126E. - PR499
- Fix Python 3 syntax errors in ibm_db_dbi.py - PR488
- Release GIL during SQLEndTran - PR482,  David Mooney, Théophile Chevalier, killuazhu, Andrew Sheridan, 
- Context Management - PR437
- stmt_errormsg() to handle non-ascii and hours mod 24 for Db2 LUW. - PR430
- fix for Blob data not inserted from ibm_db_sa orm. PR408
- Add Trove classifiers for supported Python versions. PR395
- Simplify by defining "long" in Python 3. PR397
- ibm_db.callproc returns None if OUT parameter is SMALLINT and the value is zero. PR489

  With thanks to the contributors : kevin Adler, Christian Clauss,  David Mooney, Jorge Sierra, Théophile Chevalier, killuazhu, Andrew Sheridan, 
